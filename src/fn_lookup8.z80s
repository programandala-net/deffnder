; fn_lookup8.z80s
;
; A database BASIC function for ZX Spectrum

; Version B-00-20150813

; This file is part of DEFFNder:
; http://programandala.net/en.program.deffnder.html

; --------------------------------------------------------------
; Author and license

; Copyright (C) 2014,2015 Marcos Cruz (programandala.net)

; You may do whatever you want with this work, so long as you
; retain the copyright notice(s) and this license in all
; redistributed copies and derived works. There is no warranty.

; --------------------------------------------------------------
; Description

; This code adds a function to Sinclair BASIC that searchs a
; lookup table of 8-bit values, stored in a string, for a
; 8-bit key value, and returns its associated value.

; --------------------------------------------------------------
; Usage

; A BASIC function must be defined this way:
; (the actual names are unimportant):
;   10 DEF FN f(h$,k)=USR lookup8
; Where:
;   h$       = the haystack, the searched string,
;              with the following structure:
;              every 8-bit key precedes its associated
;              8-bit value.
;   k        = the key to be searched for
;   lookup8 = address of the machine code routine

; Example of a key translation table:
;   LET t$=CHR$ 200 + CHR$ 160 + CHR$ 203 + CHR$ 162
;   LET key=FN f(t$,key)

; WARNING: As explained above, the haystack string must consist
; of pairs of chars.  When the string is not well formed (for
; example, any single character is missing), the end check will
; fail and strange things will happen.

; --------------------------------------------------------------
; Internal

; During the execution of a FN, the system variable DEFADD holds
; the address of the first parameter of its DEF FN definition
; (the first address after the opening paren). The structure of
; DEF FN i(h$,n) is the following:

; offset  content
; ------  -------
; -04     DEF FN
; -03     f(
; +00     h$
; +02     14
; +03     [string type]      
; +04     [string address, LSB first]
; +06     [string length, LSB first]
; +08     ,
; +09     k
; +10     14
; +11     0
; +12     [sign byte: 0=positive; 255=negative]
; +13     [16-bit number, LSB first]
; +15     0
; +16     )=

; --------------------------------------------------------------
; History of this file

; 2015-03-01: First version (started with the code of
; <fn_lookup16.z80s>).
;
; 2015-08-10: Revision. License.
;
; 2015-08-13: Fixed typo in the usage instructions. Thanks Derek
; (http://www.worldofspectrum.org/forums/discussion/comment/831230/#Comment_831230).

; --------------------------------------------------------------

  proc

  ; The code is relocatable

  public fn_lookup8,fn_lookup8_size
fn_lookup8:

  local check
  local next
  local found

; ..............................
; System variables

  local DEFADD
DEFADD equ 23563

; ..............................
; Parameters

  ld ix,(DEFADD)

  ld c,(ix+6)
  ld b,(ix+7)
  ; bc = len of h$
  ld a,b
  or c ; is h$ empty?
  ret z ; if so, back to BASIC (the function returns 0)
  ld l,(ix+4)
  ld h,(ix+5)
  ; hl = start of h$
  ld e,(ix+13)
  ; e = k

; ..............................
check:

  ; Check the current key

  ; hl = address of the current key
  ; e = key searched for

  ld a,(hl)
  cp e
  inc hl
  jr z,found

next:

  ; hl = address of the current value
  ; bc = remaining length

  inc hl ; hl = address of the next key
  dec bc
  dec bc ; bc = remaining chars
  ld a,b
  or c ; end of the haystack?
  ret z ; if so, back to BASIC (the function returns 0)
  
  jr check

found:

  ; The key was found

  ; hl = address of the current value

  ld c,(hl)
  ld b,0
  ; bc =  value
  ret ; back to BASIC (the function returns the value)


fn_lookup8_size: equ $-fn_lookup8

  endp

; vim: textwidth=64
